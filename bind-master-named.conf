#Store log files in log/named.log file, log dir will be in the root of the chroot environment.
#There are 7 severities, we are using info, which will log info, notice, warning, error and critical.
#We want the time printed, the severity printed, and also the category printed.
#There are 20 categories see http://www.zytrax.com/books/dns/ch7/logging.html for examples.
#I am picking the default category, which logs everything except queries.
#Additionally, I am placing logging at the very begining of the named.conf file.
logging {
    channel default_log {
        file "log/named.log" versions 5 size 10m;
        severity info;
        print-time yes;
        print-severity yes;
        print-category yes;
    };
    category default {
        default_log;
    };
};

#General server options.
#For the directory we are starting with "/" because we are running BIND in a chroot environment
#We want to restrict access to our cache, and to incoming DNS queries, which include recursive queries only from our network.
#One way to do this is to use ACLs.
#For a full zone transfer, we will only allow the secondary, whose IP is 10.1.1.11, since the master's IP is 10.1.1.10.
#We also want statistics stored when requested, which can be dumped with the command 'rndc stats'.
options {
    directory "/";
    allow-query-cache { my-nets; };
    allow-query { my-nets; };
    allow-recursion  { my-nets; };
    allow-transfer { 10.1.1.11; };
    notify yes;
    statistics-file "log/named.stats";
    pid-file "log/named.pid";
};

#ACLS
#Allow our localhost, local network, and also 10.1.1.0, which in our case happens to be our localnetwork also.
acl "my-nets" {
    localhost;
    localnets;
    10.1.1.0/24;
};

#Forwarder for research.example.com
#Let's say you have another zone, for which you have another DNS server, and you want to forward queries to that DNS server.
#The DNS server for the other zone is 10.1.2.10.
zone "research.example.com" {
                type forward;
                forwarders { 10.1.2.10; };
};

#We can control BIND using RNDC, for that we have to generate RNDC key pair.
#This can be done using the command ' rndc-confgen -b 512 -r keyboard'
#We want to keep the key in a separate file readable only by root and allow access only from localhost
#That separete file is called rndc.key
include "etc/rndc.key";
controls {
    inet 127.0.0.1 port 953
    allow {127.0.0.1;} keys { "rndc-key"; };
};


#Forward all queries to Internet root servers for Internet domains
#You can download the root.hints file from here https://www.iana.org/domains/root/files and place it in etc
#The root hints file contains all the Internet DNS root servers
zone "." {
    type hint;
    file "etc/root.hints";
};

#This is your forward lookup zone file for example.com, the entries in example.com contain the SOA, NS and A records for the zone
#We only want a full transfer from our slave server which is 10.1.1.11
#The zone file will all reside in a directory called maps, which will be under the chroot "/"
zone "example.com" {
    type master;
    file "maps/bind-example.com.zone";
};

#This is our reverse lookup zone file for the single subnet, which is 10.1.1.0/24
#The reverse zone file will reside in a directory called 'reverse' which is under the directory called 'maps'
zone "1.1.10.in-addr.arpa" {
    type master;
    file "maps/reverse/bind-10.1.1.rev";
};


#LOCALHOST
#I never quite understood the need for separete localhost zone files in BIND, but I guess it's convention
zone "localhost" {
    type master;
    file "maps/master.localhost";
};

#REVERSE for localhost
zone "0.0.127.in-addr.arpa" {
    type master;
    file "maps/reverse/127.0.0.rev";
};


